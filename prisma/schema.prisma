// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id                String    @id
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  email             String    @unique
  role              String
  emailVerified     Boolean
  firstName         String
  lastName          String
  lastSignInAt      DateTime?
  profilePictureUrl String?

  projects project[]
  file     file[]
}

model file {
  id           String   @id
  filename     String
  encoding     String
  originalname String
  size         Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  status       String

  projectId     String
  parentProject project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  userId     String
  uploadedBy user   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model project {
  id             String   @id
  projectTitle   String
  projectContext String
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  projectTags    String[]

  fileCount Int @default(0)
  chatCount Int @default(0)

  userId String
  user   user     @relation(fields: [userId], references: [id], onDelete: Cascade)
  files  file[]
  chats  String[]
}
